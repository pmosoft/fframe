package $packageName$;

import java.util.HashMap;
import java.util.Map;

import net.pmosoft.fframe.AbstractTest;
import net.pmosoft.fframe.FframeApplication;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;
import org.junit.runner.RunWith;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@SpringBootTest(classes = FframeApplication.class)
public class $FileName$Test {

	@Autowired
	private $FileName$Srv $fileName$Srv;

	@Autowired
	private $FileName$Dao $fileName$Dao;


    @Test
    public void test$FileName$Process() {
        Map<String, String> params = new HashMap<String, String>();
        params.put("PKG_FUL_NM", "user");
        $fileName$Dao.selectExt$FileName$List(params);
    }	
	
	@Test @Ignore
	public void test$FileName$Cnt() {
		Map<String, String> params = new HashMap<String, String>();
		//params.put("searchKeyCombo", ""); params.put("searchValue", "");
		params.put("PKG_FUL_NM", "user");
		$fileName$Dao.select$FileName$Cnt(params);
	}

	@Test @Ignore
	public void test$FileName$List() {
		Map<String, String> params = new HashMap<String, String>();
		//params.put("searchValue", "us");
		//params.put("searchValue", "유저");
		params.put("searchValue", "");
		$fileName$Srv.select$FileName$List(params);
		//$FileName$Dao.select$FileName$List(params);
	}

	@Test @Ignore
	public void testSave$FileName$() {

		Map<String, String> params = new HashMap<String, String>();
		params.put("PKG_FUL_NM", "package1");
		params.put("PKG2_NM"   , "pk");
		params.put("PKG3_NM"   , "pkg");
		params.put("PKG4_NM"   , "pack");
		params.put("PKG_HNM"   , "패키지");
		params.put("PKG_DESC"  , "패키지4");
		params.put("USE_YN"     , "Y");
		params.put("REG_USR_ID", "admin");
		params.put("UPD_USR_ID", "admin");

		//$FileName$Dao.deleteUser(params);

		Map<String, Object> result = $fileName$Srv.save$FileName$(params);

		System.out.println(result);
		test$FileName$List();
	}

	@Test @Ignore
	public void testDelete$FileName$() {
		Map<String, String> params = new HashMap<String, String>();
		params.put("PKG_FUL_NM", "package1");
		$fileName$Srv.delete$FileName$(params);
	}

	@Test @Ignore
	public void testInsert$FileName$() {

		Map<String, String> params = new HashMap<String, String>();
		//params.put("searchKeyCombo", ""); params.put("searchValue", "");
		params.put("PKG_FUL_NM", "package");
		params.put("PKG2_NM"   , "pk");
		params.put("PKG3_NM"   , "pkg");
		params.put("PKG4_NM"   , "pack");
		params.put("PKG_HNM"   , "패키지");
		params.put("PKG_DESC"  , "패키지");
		params.put("USE_YN"     , "Y");
		params.put("REG_USR_ID", "admin");
		params.put("UPD_USR_ID", "admin");

		$fileName$Dao.delete$FileName$(params);

		$fileName$Dao.insert$FileName$(params);

		test$FileName$List();
	}

	@Test @Ignore
	public void testUpdate$FileName$() {

		Map<String, String> params = new HashMap<String, String>();
		//params.put("searchKeyCombo", ""); params.put("searchValue", "");
		params.put("PKG_FUL_NM", "package");
		params.put("PKG2_NM"   , "pk");
		params.put("PKG3_NM"   , "pkg");
		params.put("PKG4_NM"   , "pack");
		params.put("PKG_HNM"   , "패키지");
		params.put("PKG_DESC"  , "패키지2");
		params.put("USE_YN"     , "Y");
		params.put("REG_USR_ID", "admin");
		params.put("UPD_USR_ID", "admin");

		$fileName$Dao.update$FileName$(params);

		test$FileName$List();
	}


}

